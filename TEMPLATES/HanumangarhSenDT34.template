process_flag                        = TRUE                                                                                                
frequency                           = 1                                                                                                   
login                               = pegasus.ccs.miami.edu                                                                               
user                                = famelung                                                                                            
####################
email_pysar                         = famelung@rsmas.miami.edu 
email_insarmaps                     = famelung@rsmas.miami.edu 
####################
every_day_flag                      = yes                                                                                                 
processor                           = isce                                                                                                
cleanopt                            = 0                                                                                                   
ssaraopt.platform                   = SENTINEL-1A,SENTINEL-1B                                                                             
ssaraopt.relativeOrbit              = 34
ssaraopt.startDate                  = 20160927
ssaraopt.endDate                    = 20161009
####################
topsStack.boundingBox               = 39.51 40.05 76.08 76.81                             # '-1 0.15 -91.6 -90.9'                           
topsStack.boundingBox               = 28.0 30.50 73.0 77.1                             # '-1 0.15 -91.6 -90.9'                           
topsStack.subswath                  = 1 2 3                                                 # '1 2'                                           
topsStack.numConnections            = 4                                                 # comment                                         
topsStack.azimuthLooks              = 14                                                 # comment                                         
topsStack.rangeLooks                = 38                                                # comment                                         
topsStack.filtStrength              = 0.2                                               # comment                                         
topsStack.unwMethod                 = snaphu                                            # comment                                         
topsStack.coregistration            = auto                                              # [NESD geometry], auto for NESD                  
####################
mintpy.reference.lalo               = auto                                                                                      
#mintpy.network.startDate            = #20170101  #[20090101 / no], auto for no
#mintpy.network.endDate              = #20180601  #[20110101 / no], auto for no
#mintpy.network.startDate            = 20160927  #[20090101 / no], auto for no
#mintpy.network.endDate              = 20190131  #[20090101 / no], auto for no
mintpy.networkInversion.minTempCoh  = 0.5 #[0.0-1.0], auto for 0.7, min temporal coherence for mask
mintpy.troposphericDelay.method     = auto                                                #[pyaps / height_correlation / base_trop_cor / no], auto for pyaps
mintpy.networkInversion.parallel    = yes                                               # [yes / no], auto for no, parallel processing    
mintpy.network.coherenceBased       = yes  #[yes / no], auto for no, exclude interferograms with coherence < minCoherence
mintpy.network.keepMinSpanTree      = auto  #[yes / no], auto for yes, keep interferograms in Min Span Tree network
mintpy.network.minCoherence         = 0.5  #[0.0-1.0], auto for 0.7
mintpy.network.aoiLALO              = 29.44:29.67,75.15:75.56   #[lat0:lat1,lon0:lon1 / no], auto for no - use the whole area
mintpy.geocode.latStep              = 0.0020  #[0.0-90.0 / None], auto for None, output resolution in degree
mintpy.geocode.lonStep              = 0.0020  #[0.0-90.0 / None], auto for None, output resolution in degree
mintpy.save.hdfEos5                 = yes                                               # [yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.update          = no                                                # [yes / no], auto for no, put XXXXXXXX as endDate in output filename
mintpy.save.kmz                     = yes                                               # [yes / no], auto for yes, save geocoded velocity to Google Earth KMZ file
insarmaps_flag                      = True                                                                                                
mintpy.compute.cluster              = local  #[none / slurm / pbs / lsf ], auto for none (same as cluster), config name
