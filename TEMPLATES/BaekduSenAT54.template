ssaraopt.platform                   = SENTINEL-1A,SENTINEL-1B                                                                             
#ssaraopt.startDate                  = 20160101
#ssaraopt.endDate                    = 20201211
ssaraopt.relativeOrbit              = 54                                                                                                 
####################
topsStack.boundingBox               = 41.7 42.2 126.5 129.6
topsStack.subswath                  = 2 3                                               # '1 2'                                           
topsStack.numConnections            = 2                                                 # comment                                         
topsStack.azimuthLooks              = 10                                                 # comment                                         
topsStack.rangeLooks                = 30                                                # comment                                         
topsStack.filtStrength              = 0.4                                               # comment                                         
topsStack.unwMethod                 = snaphu                                            # comment                                         
topsStack.coregistration            = auto                                              # [NESD geometry], auto for NESD                  
####################
mintpy.load.autoPath                = yes
mintpy.compute.cluster              = local
mintpy.compute.numWorker            = 32
mintpy.plot.maxMemory               = 32                           # [float], auto for 4, max memory used by one call of view.py for plotting 
mintpy.networkInversion.parallel    = no                           # [yes / no], auto for no, parallel processing    
mintpy.save.hdfEos5                 = yes                          # [yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.subset          = yes                          # [yes / no], auto for no, put subset range info   in output filenam
mintpy.save.hdfEos5.update          = no                           # [yes / no], auto for no, put XXXXXXXX as endDate in output filename
mintpy.troposphericDelay.method     = no                           # [pyaps / height_correlation / base_trop_cor / no], auto for pyaps
mintpy.networkInversion.minTempCoh  = auto

####################
minsar.miaplpyDir.addition           = date          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate))
mintpy.subset.lalo                   = 41.95:42.06,127.97:128.174   #[S:N,W:E / no], auto for no
miaplpy.subset.lalo                  = 41.95:42.06,127.97:128.174   #[S:N,W:E / no], auto for no
#mintpy.subset.lalo                   = 41.943:42.074,127.957:128.125    #[S:N,W:E / no], auto for no
#miaplpy.subset.lalo                  = 41.943:42.074,127.957:128.125    #[S:N,W:E / no], auto for no

miaplpy.start.endDate                 = auto
miaplpy.load.endDate                 = auto
mintpy.geocode.laloStep              = 0.0002,0.0002 
#mintpy.reference.minCoherence        = 0.3   #[0.0-1.0], auto for 0.85, minimum coherence for auto method

#miaplpy.interferograms.delaunayTempThresh = 90     # [days] temporal threshold for delaunay triangles, auto for 60
miaplpy.interferograms.networkType   = single_reference    # network
miaplpy.interferograms.networkType   = delaunay            # network

#############################################
miaplpy.load.processor               = isce
miaplpy.multiprocessing.numProcessor = 40
miaplpy.inversion.rangeWindow        = 24   # range window size for searching SHPs, auto for 15
miaplpy.inversion.azimuthWindow      = 7   # azimuth window size for searching SHPs, auto for 15
miaplpy.timeseries.tempCohType       = full  # [full, average], auto for full.
miaplpy.timeseries.minTempCoh        = 0.65     # auto for 0.5
mintpy.networkInversion.minTempCoh   = 0.65
#############################################
minsar.insarmaps_dataset             = DS       # [PS,DS,PSDS,geo,all], miaplpy dataset to ingest (Default: geo) (MintPy is always geo)
insarmaps_flag                       = True                                                                                                
