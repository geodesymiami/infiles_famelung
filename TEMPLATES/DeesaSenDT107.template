processor                           = isce                                                                                                
cleanopt                            = 0                                                                                                   
hazard_products_flag                = TRUE                                                                                                
ssaraopt.platform                   = SENTINEL-1A,SENTINEL-1B                                                                             
ssaraopt.relativeOrbit              = 107                                                                                                 
minsar.upload_flag                  = True    # [True / False ], upload to jetstream (Default: False)
minsar.insarmaps_flag               = True    # [True / False ], ingest into insarmaps (Default: False)
minsar.insarmaps_dataset            = PSDS       # [PS,DS,PSDS,geo,all], miaplpy dataset to ingest (Default: geo) (MintPy is always geo)
####################
topsStack.boundingBox               = 23.9 24.4 68.0 75.0                          # '-1 0.15 -91.6 -90.9'
topsStack.subswath                  = 1 2 3                                             # '1 2'                                           
topsStack.numConnections            = 5                                                 # comment                                         
topsStack.azimuthLooks              = 6                                                 # comment                                         
topsStack.rangeLooks                = 24                                                # comment                                         
topsStack.filtStrength              = 0.4                                               # comment                                         
topsStack.unwMethod                 = snaphu                                            # comment                                         
topsStack.coregistration            = auto                                              # [NESD geometry], auto for NESD                  
####################
mintpy.load.autoPath               = yes
mintpy.troposphericDelay.method     = no                                #[pyaps / height_correlation / base_trop_cor / no], auto for pyaps
mintpy.networkInversion.parallel    = no                                                #[yes / no], auto for no, parallel processing    
#mintpy.networkInversion.minTempCoh  = 0.7 #[0.0-1.0], auto for 0.7, min temporal coherence for mask
mintpy.save.hdfEos5                 = yes                                               # [yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.subset          = yes     #[yes / no], auto for no, put subset range info   in output filenam
mintpy.save.hdfEos5.update          = no                                                # [yes / no], auto for no, put XXXXXXXX as endDate in output filename
mintpy.save.kml                     = yes                                               # [yes / no], auto for yes, save geocoded velocity to Google Earth KMZ file
mintpy.compute.cluster              = local
mintpy.compute.numWorker            = 32
####################

#miaplpy.subset.lalo                  = 24.11:24.223,71.864:71.992
###### DeesaW1 #######
#mintpy.subset.lalo                   = 24.09:24.31,71.79:72.01
#miaplpy.subset.lalo                  = 24.09:24.31,71.79:72.01
#minsar.miaplpyDir.addition           = DeesaW1          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
####### DeesaW2 #######
#mintpy.subset.lalo                   = 23.89:24.11,71.79:72.01
#miaplpy.subset.lalo                  = 23.89:24.11,71.79:72.01
#minsar.miaplpyDir.addition           = DeesaW2          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
###### DeesaC1 #######
#mintpy.subset.lalo                   = 24.09:24.31,71.99:72.21
#miaplpy.subset.lalo                  = 24.09:24.31,71.99:72.21
#minsar.miaplpyDir.addition           = DeesaC1          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
###### DeesaC2 #######
#mintpy.subset.lalo                   = 23.89:24.11,71.99:72.21
#miaplpy.subset.lalo                  = 23.89:24.11,71.99:72.21
#minsar.miaplpyDir.addition           = DeesaC2          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
###### DeesaE1 #######
#mintpy.subset.lalo                   = 24.09:24.31,72.19:72.41
#miaplpy.subset.lalo                  = 24.09:24.31,72.19:72.41
#minsar.miaplpyDir.addition           = DeesaE1          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
####### DeesaE2 #######
#mintpy.subset.lalo                   = 23.89:24.11,72.19:72.41
#miaplpy.subset.lalo                  = 23.89:24.11,72.19:72.41
#minsar.miaplpyDir.addition           = DeesaE2          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
#############################################
miaplpy.load.processor               = isce
miaplpy.multiprocessing.numProcessor = 40
miaplpy.inversion.rangeWindow        = 24   # range window size for searching SHPs, auto for 15
miaplpy.inversion.azimuthWindow      = 9   # azimuth window size for searching SHPs, auto for 15
miaplpy.timeseries.tempCohType       = auto     # [full, average], auto for full.
miaplpy.timeseries.minTempCoh        = auto     # auto for 0.5
miaplpy.interferograms.delaunayBaselineRatio   = 4     # [1, 4, 9] Ratio between perpendiclar and temporal baselines, auto for 4
miaplpy.interferograms.networkType   = single_reference    # network
miaplpy.interferograms.networkType   = sequential    # network
miaplpy.interferograms.networkType   = mini_stacks            # network
miaplpy.interferograms.networkType   = delaunay            # network
miaplpy.interferograms.connNum       = 8    # network
miaplpy.timeseries.residualNorm      = L2     # [L1, L2], auto for L2, norm minimization solution
miaplpy.interferograms.ministackRefMonth       = 5     # The month of the year that coherence is high to choose reference from, default: 6

miaplpy.timeseries.residualNorm      = auto     # [L1, L2], auto for L2, norm minimization solution
#############################################
