processor                             = isce
#cleanopt                              = 0
ssaraopt.platform                     = SENTINEL-1A,SENTINEL-1B
ssaraopt.startDate                    = 20140101
ssaraopt.relativeOrbit                = 48
topsStack.boundingBox                 = 25.67 25.93 -80.23 -80.106  #25.4 26.1 -82.0 -80.0
topsStack.subswath                    = 3
topsStack.numConnections              = 6
topsStack.azimuthLooks                = 7
topsStack.rangeLooks                  = 19
topsStack.filtStrength                = 0.3
topsStack.coregistration              = geometry
topsStack.demDir                      = /work2/05861/tg851601/stampede2/insarlab/DEM/MiamiSenAT48

#mintpy.subset.lalo                    = 25.755:25.9,-80.15:-80.115              # Surfside
#mintpy.reference.lalo                 = 25.87,-80.127                                                                                     
#mintpy.subset.lalo                    = 25.745:25.9,-80.21:-80.115              # Brickel and Miami Beach
mintpy.subset.lalo                    = 25.69:25.81,-80.28:-80.160               # MiamiLarge
mintpy.subset.lalo                    = 25.67:25.90,-80.28:-80.115               # MiamiVLarge
mintpy.subset.lalo                    = 25.748:25.81,-80.21:-80.182              # Brickell
mintpy.subset.lalo                    = 25.725:25.81,-80.242:-80.115             # Coconut Grove and "Brickell" FA 12/2 021area too large for insarmaps
mintpy.subset.lalo                    = 25.725:25.81,-80.242:-80.209             # Coconut Grove 
mintpy.subset.lalo                    = 25.748:25.81,-80.21:-80.182              # Brickell
mintpy.subset.lalo                    = 25.725:25.91,-80.242:-80.115             # MiamiLage: Coconut Grove to Surfside
mintpy.reference.lalo                 = 25.7582,-80.2028                         # W Brickel Marquis condo


# test for unwrap error correction
mintpy.subset.lalo                    = 25.745:25.9,-80.21:-80.115              # Brickel and Miami Beach
mintpy.subset.lalo                    = 25.755:25.9,-80.15:-80.115              # Surfside
mintpy.reference.lalo                 = 25.8914,-80.1583                         # W Brickel Marquis condo

mintpy.load.autoPath                  = yes
mintpy.compute.cluster                = local
mintpy.compute.numWorker              = 20
mintpy.troposphericDelay.method     = auto  #[pyaps / height_correlation / no / gacos], auto for pyaps
mintpy.save.hdfEos5                 = yes                        # [yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.update          = no                                                # [yes / no], auto for no, put XXXXXXXX as endDate in output filename


miaplpy.load.autoPath                  = yes
miaplpy.compute.numWorker              = 20
miaplpy.load.processor      = isce

mintpy.load.waterMaskFile  = $SCRATCHDIR/Miami2SenAT48/swbdLat_N25_N26_Lon_W081_W080.wbd  #[path of water  mask file], optional but recommended

miaplpy.timeseries.tempCohType            = average     # [full, average], auto for full.
miaplpy.timeseries.minTempCoh             = auto     # auto for 0.5
#miaplpy.timeseries.waterMask              = /scratch1/06736/sxm1611/MiamiSenAT48/miaplpy_lidar/lidar_dem/waterMask.h5     # auto for None
miaplpy.interferograms.type               = delaunay
#miaplpy.interferograms.list               = $WORKDIR/miaplpy_files/Miami2SenAT48/short_baseline_ifgs.txt


## Unwrapping Error Correction (optional)
#mintpy.unwrapError.method          = bridging+phase_closure
mintpy.unwrapError.method          = bridging
mintpy.unwrapError.method          = phase_closure
#mintpy.unwrapError.waterMaskFile   = $SCRATCHDIR/Miami2SenAT48/wbdWaterMask.h5   #[waterMask.h5 / no], auto for waterMask.h5 or no [if not found]
mintpy.networkInversion.waterMaskFile   = no #[filename / no], auto for waterMask.h5 or no [if not found]


## Solid earth tide correction
mintpy.solidEarthTides             = no
#mintpy.reference.lalo              = 25.8942 -80.1585
#mintpy.troposphericDelay.method =  pyaps
