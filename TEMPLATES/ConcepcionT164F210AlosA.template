#### getSAR, raw2slc and createBaselineList  options ###############################
#walltime            = 4:00
memoryCoregist      = 3700
memoryProcessFilt   = 3700
memoryProcessDone   = 3700
#source              = asf
#satellite           = Alos
#boundingBox         = 3.33,98.30,3.00,98.60
#track               = 495
#frame               = 50
#startFrame          = 50
#endFrame            = 50
#endDate             = 080516
#endDate             = 110116
platform            = Alos
startDate           = 070220               # the 2006 imagery does not work
ssaraopt            = --platform=Alos -r 164 -f 210 -s 2007-02-20  -e 2011-12-31 --beamSwath=7
masterDate          = 070808
raw2slc_OrbitType   = HDR
selectMethod        = delaunay
perpBaseMax         = 400
lengthDayMax        = 366
lengthDayMin        = 0
DopOverlapThresh    = 15
ampmagFineopt      = 50/50/256/64
pixel_ratio         = 3
####### ROI_PAC OPTIONS ##############################
DEM                = /nethome/j.lebowitz1/insarlab/DEMDIR/Concepcion/Concepcion1.dem
flattening         = orbit
OrbitType          = HDR
Rlooks_sim         = 1
Rlooks_int         = 4
Rlooks_unw         = 4
#meter_per_cycle    = 6.283
#unw_method         = old
unw_method         = treef
unw_method         = snaphu
#snap_conncomthresh = 60
Filt_method        = psfilt_adapt_filt
Filt_method        = psfilt
FilterStrength     = 0.5
UnwrappedThreshold = 0.10
maskingwith0height = TRUE
cleanopt           = 1

######### PySAR options ##############################
#
pysar.unwrapError                    = no
pysar.troposphericDelay              = no
pysar.troposphericDelay.method       = pyaps  # ['height-correlation', 'pyaps']
pysar.troposphericDelay.polyOrder    = 1
pysar.troposphericDelay.weatherModel = ECMWF  # ['ECMWF', 'MERRA', 'NARR']
pysar.acquisitionTime                = 12:00  # ['00:00', '06:00', '12:00', '18:00']
#
pysar.topographicResidual           = yes
pysar.orbitError          = yes
pysar.orbitError.method   = plane       # ['quadratic', 'plane', 'quadratic_range', 'quadratic_azimiuth', 'plane_range', 'plane_azimuth','baselineCor','BaseTropCor']

pysar.mask                 = yes
pysar.mask.threshold       = 0.7
#pysar.geocode              = yes
#


