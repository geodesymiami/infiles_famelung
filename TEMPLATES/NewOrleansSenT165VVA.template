######################################################
cleanopt            = 2    # [ 0 / 1 / 2 / 3 4]   0: no cleaning, 1: largest files, 2: merged/etc dirs, 3: SLC, 4: everything
ssaraopt            = --platform=SENTINEL-1A,SENTINEL-1B -r 165 -f 91,92,93,94,95,96 -s 2017-06-01 -e 2017-12-30
ssaraopt            = --platform=SENTINEL-1A,SENTINEL-1B -r 165 -f 91,92,93,94,95,96 -s 2016-07-14
ssaraopt            = --platform=SENTINEL-1A,SENTINEL-1B -r 165 -f 91,92,93,94,95,96 
# there are 7 earlier scenes but with several months between

######################################################
processor                      = isce
sentinelStack.boundingBox      = '29.7 30.1 -90.5 -89.9' 
sentinelStack.subswath         = 2   # comment 
sentinelStack.numConnections   = 5   # comment
sentinelStack.azimuthLooks     = 4   # comment
sentinelStack.rangeLooks       = 12  # comment
sentinelStack.filtStrength     = 0.2      # comment
sentinelStack.unwMethod        = snaphu   # comment
sentinelStack.coregistration   = geometry # comment

pysar.network.coherenceBased   = no  #[yes / no], auto for yes, exclude interferograms with coherence < minCoherence
pysar.network.maskFile         = no  #[filename, no], auto for [maskLand.h5, mask.h5][0], no for all pixels
pysar.network.maskAoi.lalo     = 29.8:30.08,-90.3:-89.9   #  -0.2:-0.1,-78.6:-78.3  #[lat0:lat1,lon0:lon1 / no], auto for no - use the whole area
pysar.network.minCoherence     = auto #0.63  #[0.0-1.0], auto for 0.7
pysar.networkInversion.weightFunc = variance #[variance / no / coherence], auto for no
pysar.networkInversion.minTempCoh = auto  #[0.0-1.0], auto for 0.7, min temporal coherence for mask
pysar.networkInversion.waterMaskFile = no #[filename / no], auto for geometry*.h5

pysar.reference.lalo           =  29.937,-90.07   #  conference center
pysar.deramp = plane # ['quadratic', 'plane', 'quardatic_range', 'quadratic_azimiuth', 'plane_range', 'plane_azimuth','baselineCor','BaseTropCor']

pysar.troposphericDelay.method = no # pyaps  #[pyaps / height_correlation / base_trop_cor / no], auto for pyaps
pysar.save.hdfEos5             = yes   #[yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
pysar.save.hdfEos5.update      = yes   #[yes / no], auto for no, put XXXXXXXX as endDate in output filename
######################################################
insarmaps.cityName='New Orleans'
