######################################################
cleanopt            = 2    # [ 0 / 1 / 2 / 3 4]   0: no cleaning, 1: largest files, 2: merged/etc dirs, 3: SLC, 4: everything
ssaraopt            = --platform=SENTINEL-1A,SENTINEL-1B -r 18 --intersectsWith='POLYGON((-79.0 -2.1,-78.2 -2.1,-78.2 0.3,-79.0 0.3,-79.0 -2.1))' -s 2017-09-01 -e 2017-11-30
ssaraopt            = --platform=SENTINEL-1A,SENTINEL-1B -r 18 -f 1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180 -s 2017-09-01 -e 2017-11-30
ssaraopt            = --platform=SENTINEL-1A,SENTINEL-1B -r 18 -f 1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180 
######################################################
processor                      = isce
sentinelStack.excludeDate      = 20171020,20180217
sentinelStack.boundingBox      = '-1.5 -0.1 -78.7 -78.4'
sentinelStack.subswath         = 3   # comment 
sentinelStack.numConnections   = 5   # comment
sentinelStack.azimuthLooks     = 4   # comment
sentinelStack.rangeLooks       = 12  # comment
sentinelStack.filtStrength     = 0.2  # comment
sentinelStack.unwMethod        = snaphu  # comment
sentinelStack.coregistration   = auto  # comment

pysar.network.coherenceBased   = no  #[yes / no], auto for yes, exclude interferograms with coherence < minCoherence
pysar.network.maskAoi.lalo     = auto  #  -0.2:-0.1,-78.6:-78.3  #[lat0:lat1,lon0:lon1 / no], auto for no - use the whole area
pysar.network.minCoherence     = auto #0.63  #[0.0-1.0], auto for 0.7
pysar.networkInversion.weightFunc = fim #[variance / no / coherence], auto for no
pysar.networkInversion.minTempCoh = auto #[0.0-1.0], auto for 0.7, min temporal coherence for mask

pysar.reference.lalo           =  -1.406,-78.852 #  -0.704, -78.300 # 0.91, -77.94   # 15 km N of Chiles
pysar.deramp = plane # ['quadratic', 'plane', 'quardatic_range', 'quadratic_azimiuth', 'plane_range', 'plane_azimuth','baselineCor','BaseTropCor']

pysar.network.startDate        = no   #[20090101 / no], auto for no
pysar.network.endDate          = no   #[20090101 / no], auto for no
pysar.troposphericDelay.method = no # pyaps  #[pyaps / height_correlation / base_trop_cor / no], auto for pyaps
pysar.save.hdfEos5             = yes   #[yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
pysar.save.hdfEos5.update      = yes   #[yes / no], auto for no, put XXXXXXXX as endDate in output filename
######################################################
unavco.processing_software= ISCE
insarmaps.volcanoName=Cotopaxi,Tungurahua,Chimborazo
