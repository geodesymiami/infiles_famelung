minsar.processor                             = isce
cleanopt                              = 0
ssaraopt.platform                     = SENTINEL-1A,SENTINEL-1B
ssaraopt.startDate                    = 20160101
ssaraopt.endDate                      = 20221231
ssaraopt.relativeOrbit                = 175
topsStack.boundingBox                 = 40.0 40.4 19.0 24.0      #25.4 26.1 -82.0 -80.0 POLYGON((21.9347 40.2052,22.0122 40.2052,22.0122 40.2644,21.9347 40.2644,21.9347 40.2052))
topsStack.subswath                    = 3
topsStack.numConnections              = 2
topsStack.azimuthLooks                = 5
topsStack.rangeLooks                  = 20
topsStack.filtStrength                = 0.3
topsStack.coregistration              = geometry
 
###### Bridge
miaplpy.subset.lalo                    = 40.221:40.240,21.965:21.976          #[S:N,W:E / no], auto for no
mintpy.reference.lalo                 = auto # 25.8248,-80.1222 # auto refPointLat=25.82477&refPointLon=-80.12222 # 25.8791,-80.1259                          # W Brickel Marquis condo
minsar.miaplpyDir.addition            = Bridge          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
#miaplpy.load.startDate              = 20200101
#miaplpy.load.endDate                = 20221231
#mintpy.reference.minCoherence       = 0.7
mintpy.reference.date                = auto # Â€    #[reference_date.txt / 20090214 / no], auto for reference_date.txt

#############################################
miaplpy.load.processor      = isce
#FA: for miaplpy.phase_inversion we should use 40 but for mintpy.phase_to_range 20 as it uses dask and fails with 40
miaplpy.multiprocessing.numProcessor = 40
miaplpy.inversion.rangeWindow              = 19   # range window size for searching SHPs, auto for 15
miaplpy.inversion.azimuthWindow            = 9   # azimuth window size for searching SHPs, auto for 15
miaplpy.timeseries.tempCohType            = auto     # [full, average], auto for full.
miaplpy.timeseries.minTempCoh             = auto     # auto for 0.5
miaplpy.interferograms.networkType = sequential          # qq
miaplpy.interferograms.networkType = single_reference    # network
miaplpy.inversion.rangeWindow              = 19   # range window size for searching SHPs, auto for 15
miaplpy.inversion.azimuthWindow            = 9  # azimuth window size for searching SHPs, auto for 15
#############################################
mintpy.load.autoPath                 = yes
mintpy.compute.cluster               = local
mintpy.compute.numWorker             = 20
mintpy.troposphericDelay.method      = no # auto  #[pyaps / height_correlation / no / gacos], auto for pyaps
mintpy.save.hdfEos5                  = yes                        # [yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.update           = no                                                # [yes / no], auto for no, put XXXXXXXX as endDate in output filename
mintpy.save.hdfEos5.subset           = yes     #[yes / no], auto for no, put subset range info   in output filename
mintpy.topographicResidual.phaseVelocity = yes  #[yes / no], auto for no - use phase velocity for minimization
#mintpy.topographicResidual.excludeDate = 20161015,20191006  #[20070321 / txtFile / no], auto for exclude_date.txt
#mintpy.unwrapError.method              = bridging  #[bridging / phase_closure / bridging+phase_closure / no], auto for no
#mintpy.unwrapError.connCompMinArea     = 200  #[1-inf], auto for 2.5e3, discard regions smaller than the min size in pixels

