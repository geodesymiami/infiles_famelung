######################################################
ssaraopt.platform                  = SENTINEL-1A,SENTINEL-1B  # [Sentinel-1 / ALOS2 / RADARSAT2 / TerraSAR-X / COSMO-Skymed]
ssaraopt.relativeOrbit             = 142
ssaraopt.startDate                 = 20141031  # YYYYMMDD
ssaraopt.endDate                   = 20150101    # YYYYMMDD
######################################################
topsStack.subswath                 = 1 2 3 # '1 2'
topsStack.numConnections           = 3    # comment
topsStack.azimuthLooks             = 5    # comment
topsStack.rangeLooks               = 20   # comment
topsStack.filtStrength             = 0.2  # comment
topsStack.unwMethod                = snaphu  # comment
topsStack.coregistration           = auto  # [NESD geometry], auto for NESD
#topsStack.excludeDates            =  20240926
######################################################
mintpy.load.autoPath               = yes
mintpy.compute.cluster             = local #[local / slurm / pbs / lsf / none], auto for none, cluster type
mintpy.compute.numWorker           = 40 #[int > 1 / all], auto for 4 (local) or 40 (non-local), num of workers
mintpy.plot.maxMemory              = 180  #[float], auto for 4, max memory used by one call of view.py for plotting.
mintpy.networkInversion.parallel   = yes  #[yes / no], auto for no, parallel processing using dask
mintpy.save.hdfEos5                = yes   #[yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.update         = yes   #[yes / no], auto for no, put XXXXXXXX as endDate in output filename
mintpy.save.hdfEos5.subset         = yes   #[yes / no], auto for no, put subset range info in output filename
mintpy.save.kmz                    = yes   #[yes / no], auto for yes, save geocoded velocity to Google Earth KMZ file
mintpy.reference.minCoherence      = auto      #[0.0-1.0], auto for 0.85, minimum coherence for auto method
mintpy.troposphericDelay.method    = auto   # pyaps  #[pyaps / height_correlation / base_trop_cor / no], auto for pyaps
mintpy.networkInversion.minTempCoh = 0.6 #[0.0-1.0], auto for 0.7, min temporal coherence for mask
mintpy.network.minCoherence         = 0.6 #[0.0-1.0], auto for 0.7
mintpy.network.keepMinSpanTree      = no  #[yes / no], auto for yes, keep interferograms in Min Span Tree network
mintpy.network.aoiLALO              = 0.65:0.8,-78.0:-77.8  #[S:N,W:E / no], auto for no - use the whole area
######################################################
miaplpy.load.processor            = isce
miaplpy.multiprocessing.numProcessor = 40
miaplpy.inversion.rangeWindow     = 24   # range window size for searching SHPs, auto for 15
miaplpy.inversion.azimuthWindow   = 7    # azimuth window size for searching SHPs, auto for 15
miaplpy.timeseries.tempCohType    = full     # [full, average], auto for full.
miaplpy.interferograms.networkType = delaunay # network
######################################################
minsar.miaplpyDir.addition         = date  #[name / lalo / no] auto for no (miaply_$name_startDate_endDate))
mintpy.subset.lalo                 = 0.60:0.826,-78.087:-77.742    #[S:N,W:E / no], auto for no
miaplpy.subset.lalo                = 0.60:0.826,-78.087:-77.742    #[S:N,W:E / no], auto for no
miaplpy.subset.lalo                = 0.60:0.90,-78.19:-77.70           #[S:N,W:E / no], auto for no
mintpy.subset.lalo                 = 0.60:0.90,-78.19:-77.70           #[S:N,W:E / no], auto for no
mintpy.geocode.laloStep            = 0.0008,0.0008                     #  auto  # 0.0008  #[-0.000555556,0.000555556 / None], auto for None, output resolution in degree
miaplpy.load.startDate             = auto  # 20200101
miaplpy.load.endDate               = auto
miaplpy.timeseries.minTempCoh      = 0.7      # auto for 0.5
mintpy.networkInversion.minTempCoh = 0.7
######################################################
minsar.insarmaps_flag              = False
minsar.upload_flag                 = True
minsar.insarmaps_dataset           = filt*DS
