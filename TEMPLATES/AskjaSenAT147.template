ssaraopt.platform                   = SENTINEL-1A,SENTINEL-1B                                                                             
ssaraopt.startDate                  = 20140101
ssaraopt.startDate                  = 20180101
ssaraopt.relativeOrbit              = 147                                                                                                 
ssaraopt.intersectsWith             = POLYGON((-16.9271 64.9448,-16.5047 64.9448,-16.5047 65.1075,-16.9271 65.1075,-16.9271 64.9448))

####################
topsStack.boundingBox               = auto
topsStack.subswath                  = 1                                                # '1 2'                                           
topsStack.numConnections            = 9                                                 # comment                                         
topsStack.azimuthLooks              = 4                                                 # comment                                         
topsStack.rangeLooks                = 16                                                # comment                                         
topsStack.filtStrength              = 0.4                                               # comment                                         
topsStack.unwMethod                 = snaphu                                            # comment                                         
topsStack.coregistration            = auto                                              # [NESD geometry], auto for NESD                  
####################
mintpy.load.autoPath                = yes
mintpy.troposphericDelay.method     = no                                #[pyaps / height_correlation / base_trop_cor / no], auto for pyaps
mintpy.networkInversion.parallel    = no                                                #[yes / no], auto for no, parallel processing    
mintpy.save.hdfEos5                 = yes                                               # [yes / update / no], auto for no, save timeseries to UNAVCO InSAR Archive format
mintpy.save.hdfEos5.subset          = yes     #[yes / no], auto for no, put subset range info   in output filenam
mintpy.save.hdfEos5.update          = no                                                # [yes / no], auto for no, put XXXXXXXX as endDate in output filename
mintpy.save.kml                     = yes                                               # [yes / no], auto for yes, save geocoded velocity to Google Earth KMZ file
mintpy.compute.cluster              = local
mintpy.compute.numWorker            = 32

mintpy.network.coherenceBased  = yes  #[yes / no], auto for no, exclude interferograms with coherence < minCoherence
mintpy.network.aoiLALO         =  65.047:65.074,-16.842:-16.7    #[S:N,W:E / no], auto for no  #[S:N,W:E / no], auto for no - use the whole area
mintpy.network.minCoherence    = 0.7  #[0.0-1.0], auto for 0.7
####################

minsar.miaplpyDir.addition           = date          #[name / lalo / no ]  auto for no (miaply_$name_startDate_endDate)) 
#mintpy.subset.lalo                   = 2.731:2.814,125.367:125.459    #[S:N,W:E / no], auto for no
#mintpy.subset.lalo                   = 2.0:3.0,125.367:125.459    #[S:N,W:E / no], auto for no
miaplpy.load.startDate               = auto #  20200101
miaplpy.load.endDate                 = auto
mintpy.geocode.laloStep              = 0.0008,0.0008 

miaplpy.interferograms.delaunayTempThresh = 90     # [days] temporal threshold for delaunay triangles, auto for 60
miaplpy.interferograms.networkType   = single_reference    # network
miaplpy.interferograms.networkType   = delaunay            # network

#############################################
miaplpy.load.processor               = isce
miaplpy.multiprocessing.numProcessor = 40
miaplpy.inversion.rangeWindow        = 24   # range window size for searching SHPs, auto for 15
miaplpy.inversion.azimuthWindow      = 7   # azimuth window size for searching SHPs, auto for 15
miaplpy.timeseries.tempCohType       = average  # [full, average], auto for full.              #FA 6/2024:  used in first version
miaplpy.timeseries.tempCohType       = full  # [full, average], auto for full.
miaplpy.timeseries.minTempCoh        = 0.65     # auto for 0.5
mintpy.networkInversion.minTempCoh   = 0.65     # auto for 0.5
#############################################
minsar.insarmaps_flag                = True
minsar.insarmaps_dataset             = DS
minsar.upload_option                 = --geo
